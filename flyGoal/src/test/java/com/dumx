package cn.lds.report.convertor;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import cn.lds.common.dto.AbstractConvertor;
import cn.lds.report.dto.ClientUserDTO;
import cn.lds.report.model.ClientUser;
import cn.lds.report.service.ClientUserService;

/**
 * ClientUserConvertor
 */
@Component
public class ClientUserConvertor extends AbstractConvertor<ClientUser, ClientUserDTO> {

    @Autowired
    private ClientUserService clientUserService;

    @Override
    public ClientUser toModel(final ClientUserDTO dto) {
        if (dto.isNew()) {//新增
            return this.constructModel(dto);
        } else {//更新
            return this.updateModel(dto);
        }
    }

    @Override
    public ClientUserDTO toDTO(final ClientUser model) {
        if (model == null) {
            return null;
        }
        final ClientUserDTO dto = new ClientUserDTO();
        dto.setId(model.getId());
        dto.setNo(model.getNo());
        dto.setMobile(model.getMobile());
        dto.setNickname(model.getNickname());
        dto.setAvatarId(model.getAvatarId());
        dto.setOffice(model.getOffice());
        dto.setMoodMessage(model.getMoodMessage());

        return dto;
    }

    // 构建新Model
    private ClientUser constructModel(final ClientUserDTO dto) {
        final ClientUser model = new ClientUser();
        model.setNo(dto.getNo());
        model.setMobile(dto.getMobile());
        model.setNickname(dto.getNickname());
        model.setAvatarId(dto.getAvatarId());
        model.setOffice(dto.getOffice());
        model.setMoodMessage(dto.getMoodMessage());

        return model;
    }

    // 更新Model
    private ClientUser updateModel(final ClientUserDTO dto) {
        final ClientUser model = this.clientUserService.getClientUser(dto.getId());
        model.setNo(dto.getNo());
        model.setMobile(dto.getMobile());
        model.setNickname(dto.getNickname());
        model.setAvatarId(dto.getAvatarId());
        model.setOffice(dto.getOffice());
        model.setMoodMessage(dto.getMoodMessage());

        return model;
    }
}

